[{"/Users/cenkkaraboa/Desktop/son/web/src/index.js":"1","/Users/cenkkaraboa/Desktop/son/web/src/reportWebVitals.js":"2","/Users/cenkkaraboa/Desktop/son/web/src/components/root/App.js":"3","/Users/cenkkaraboa/Desktop/son/web/src/components/common/CalisanKaydet.js":"4","/Users/cenkkaraboa/Desktop/son/web/src/components/navbar/Navbar.js":"5","/Users/cenkkaraboa/Desktop/son/web/src/components/common/KameraEkle.js":"6","/Users/cenkkaraboa/Desktop/son/web/src/components/common/Rapor.js":"7","/Users/cenkkaraboa/Desktop/son/web/src/components/common/ZiyaretciKaydet.js":"8","/Users/cenkkaraboa/Desktop/son/web/src/components/common/Kamera1.js":"9","/Users/cenkkaraboa/Desktop/son/web/src/components/requests/urlconfigs.js":"10","/Users/cenkkaraboa/Desktop/son/web/src/components/requests/Request.js":"11","/Users/cenkkaraboa/Desktop/son/web/src/components/utilities/Toast.js":"12"},{"size":543,"mtime":1619732925530,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1619726001537,"results":"15","hashOfConfig":"14"},{"size":899,"mtime":1621783017376,"results":"16","hashOfConfig":"14"},{"size":8337,"mtime":1621766085800,"results":"17","hashOfConfig":"14"},{"size":3619,"mtime":1621770466143,"results":"18","hashOfConfig":"14"},{"size":6197,"mtime":1621764337343,"results":"19","hashOfConfig":"14"},{"size":2983,"mtime":1621769859219,"results":"20","hashOfConfig":"14"},{"size":9397,"mtime":1621766609761,"results":"21","hashOfConfig":"14"},{"size":1239,"mtime":1621783320554,"results":"22","hashOfConfig":"14"},{"size":52,"mtime":1622411387135,"results":"23","hashOfConfig":"14"},{"size":610,"mtime":1619729164893,"results":"24","hashOfConfig":"14"},{"size":401,"mtime":1619727062869,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"dctx70",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"/Users/cenkkaraboa/Desktop/son/web/src/index.js",[],["59","60"],"/Users/cenkkaraboa/Desktop/son/web/src/reportWebVitals.js",[],"/Users/cenkkaraboa/Desktop/son/web/src/components/root/App.js",["61"],"import Navbar from '../navbar/Navbar';\r\nimport { Route, Switch,BrowserRouter } from \"react-router-dom\";\r\nimport ZiyaretciKaydet from '../common/ZiyaretciKaydet';\r\nimport '../../content/style.css';\r\nimport CalisanKaydet from '../common/CalisanKaydet';\r\nimport KameraEkle from '../common/KameraEkle';\r\nimport Rapor from '../common/Rapor';\r\nimport Kamera1 from '../common/Kamera1';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <BrowserRouter>\r\n     <Navbar></Navbar>\r\n     <Route path=\"/ziyaretcikaydet\" exact component={ZiyaretciKaydet}></Route>\r\n     <Route path=\"/gorevlikaydet\" exact component={CalisanKaydet}></Route>\r\n     <Route path=\"/kameraekle\" exact component={KameraEkle}></Route>\r\n     <Route path=\"/rapor\" exact component={Rapor}></Route>\r\n     <Route path=\"/kamera\" exact component={Kamera1}></Route>\r\n     </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/Users/cenkkaraboa/Desktop/son/web/src/components/common/CalisanKaydet.js",["62","63","64","65","66"],"import React, { Component, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { get, post, postImage } from '../requests/Request';\nimport * as toast from '../utilities/Toast';\nimport * as urlConfig from '../requests/urlconfigs';\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst CalisanKaydet = () => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n\n            },\n        },\n    }));\n    const classes = useStyles();\n    const [data, setData] = useState({});\n    const [cameraOptionData, setCameraOptionData] = useState({\n        isLoading: true,\n        data: null\n    });\n    const [birimAdiOptions, setBirimAdiOptions] = useState({\n        isLoading: true,\n        data: null\n    });\n    const [tableData, setTableData] = useState({\n        isLoading: true,\n        data: []\n    });\n    const onChange = (event) => {\n        \n        let e = event.target;\n        setData({ ...data, [e.name]: e.value });\n        console.log(data);\n    }\n\n    const getSelectValue=(e)=>{\n        setData({...data,cameraPaths: e})\n    }\n\n    useEffect(() => {\n        if (cameraOptionData.isLoading) {\n            getCameraOptions();\n        }\n        if (birimAdiOptions.isLoading) {\n            getBirimAdiOptions();\n        }\n    });\n\n    const calisanlariGetir=()=>{\n        var request = get(urlConfig.SERVICE_URL + \"/api/yonetim/calisanlar\");\n        request.then(data => {\n            if (data.success) {\n                const formattedMessages = data.data.map((option) => {\n                    return {\n                        calisanId: option.calisanId,\n                        ad: option.ad,\n                        soyad: option.soyad,\n                        birimAdi: option.birimAdi\n                    };\n                });\n                console.log(formattedMessages);\n                setTableData({\n                    isLoading: false,\n                    data: formattedMessages\n                });\n            }\n        });\n    }\n\n    useEffect(()=>{\n        calisanlariGetir();\n    },tableData)\n\n    const getCameraOptions = () => {\n        var request = get(urlConfig.SERVICE_URL + \"/api/yonetim/kameralar\");\n        request.then(data => {\n            if (data.success) {\n                const formattedMessages = data.data.map((option) => {\n                    return {\n                        key: option.key,\n                        label: option.value\n                    };\n                });\n                console.log(formattedMessages);\n                setCameraOptionData({\n                    isLoading: false,\n                    data: formattedMessages\n                });\n            }\n        });\n    }\n\n    const getBirimAdiOptions = () => {\n        var request = get(urlConfig.SERVICE_URL + \"/api/yonetim/birimler\");\n        request.then(data => {\n            if (data.success) {\n                setBirimAdiOptions({\n                    isLoading: false,\n                    data: data.data\n                });\n            }\n        });\n    }\n\n    const submit=()=>{\n        post(urlConfig.SERVICE_URL+\"/api/yonetim/calisanekle\",data)\n        .then(response => response.json())\n        .then(data => {\n            if(data.success){\n                toast.success(data.message);\n                calisanlariGetir();\n            }\n            else{\n                toast.error(data.error);\n            }\n        });\n    }\n\n\n    return (\n        <div className=\"container content\">\n            <div className=\"card mx-auto \">\n                <div className=\"card-header text-center\">\n                    <h5 className=\"card-title\">\n                        Yeni Çalışan Kaydet\n                            </h5>\n                </div>\n                <div className=\"card-body\">\n                    {cameraOptionData.isLoading && birimAdiOptions.isLoading && <p>Fetching options...</p>}\n                    {!cameraOptionData.isLoading && !birimAdiOptions.isLoading && (\n                        <div className={classes.root}>\n                            <TextField onChange={onChange} name=\"ad\" fullWidth helperText=\"Ad girin\" id=\"outlined-basic\" label=\"Ad\" variant=\"outlined\" />\n                            <TextField onChange={onChange} name=\"soyad\" fullWidth helperText=\"Soyad girin\" id=\"outlined-basic\" label=\"Soyad\" variant=\"outlined\" />\n                            <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Birim Adını Seçin</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-outlined-label\"\n                                    id=\"demo-simple-select-outlined\"\n                                    label=\"Age\"\n                                    name=\"birimId\"\n                                    onChange={onChange}\n                                >\n                                    {birimAdiOptions.data.map((option) => (\n                                        <MenuItem key={option.key} value={option.key}>{option.value}</MenuItem>\n                                    ))}\n\n                                </Select>\n                            </FormControl>\n                            \n                                <DropdownMultiselect\n                                    options={cameraOptionData.data}\n                                    handleOnChange={getSelectValue}\n                                    name=\"cameraPaths\"\n                                />\n                        </div>\n                    )}\n\n                </div>\n                <div className=\"card-footer\">\n                    <button onClick={submit} type=\"button\" className=\"btn btn-primary mx-auto\">Kaydet</button>\n                </div>\n            </div>\n            {tableData.isLoading && <p>Ziyaretçiler çekiliyor...</p>}\n            {!tableData.isLoading && (\n                <div className=\"mt-4\">\n                    <TableContainer component={Paper}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>#</TableCell>\n                                    <TableCell align=\"right\">Ad</TableCell>\n                                    <TableCell align=\"right\">Soyad</TableCell>\n                                    <TableCell align=\"right\">Birim Adı</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {tableData.data.map((data) => (\n                                    <TableRow key={data.calisanId}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {data.calisanId}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{data.ad}</TableCell>\n                                        <TableCell align=\"right\">{data.soyad}</TableCell>\n                                        <TableCell align=\"right\">{data.birimAdi}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            )}\n        </div>\n    )\n}\nexport default CalisanKaydet;\n","/Users/cenkkaraboa/Desktop/son/web/src/components/navbar/Navbar.js",["67","68","69","70","71"],"import React, { Component, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { get, post, postImage } from '../requests/Request';\r\nimport * as urlConfig from '../requests/urlconfigs';\r\n\r\nconst Navbar = () => {\r\n    const [kamera, setKamera] = useState({\r\n        isLoading: true,\r\n        data: []\r\n    })\r\n\r\n    const KameralariGetir = () => {\r\n        var request = get(urlConfig.SERVICE_URL + \"/api/yonetim/kameralari-getir\");\r\n        request.then(data => {\r\n            if (data.success) {\r\n                const formattedMessages = data.data.map((option) => {\r\n                    return {\r\n                        isim: option.isim,\r\n                        kameraId: option.kameraId\r\n                    };\r\n                });\r\n                console.log(formattedMessages);\r\n                setKamera({\r\n                    isLoading: false,\r\n                    data: formattedMessages\r\n                });\r\n            }\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        KameralariGetir();\r\n    }, kamera)\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <nav className=\"navbar bg-light navbar-light navbar-expand-sm justify-content-center fixed-top p-3\">\r\n                <a href=\"#\" className=\"navbar-brand\">Gölgen</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                    <ul className=\"navbar-nav \">\r\n                        <li className=\"nav-item \">\r\n                            <div className=\"dropdown \">\r\n                                <button className=\"btn btn-ligtht dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\r\n                                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Kameralar\r\n                        </button>\r\n                                {kamera.isLoading && <p>Kameralar çekiliyor...</p>}\r\n                                {!kamera.isLoading && (\r\n                                    <div className=\"dropdown-menu clearfix \" aria-labelledby=\"dropdownMenuButton\">\r\n                                        {kamera.data.map(kamera=>(\r\n                                            <Link className=\"dropdown-item\" to={\"/kamera?kameraId=\"+kamera.kameraId}>{kamera.isim}</Link>\r\n                                        ))}\r\n                                    </div>\r\n\r\n                                )}\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"navlink btn btn-light\" to=\"/rapor\">Rapor</Link>\r\n\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"navlink btn btn-light\" to=\"/ziyaretcikaydet\">Ziyaretçi Kaydet</Link>\r\n\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"navlink btn btn-light\" to=\"/gorevlikaydet\">Çalışan Kaydet</Link>\r\n\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"navlink btn btn-light\" to=\"/kameraekle\">Kamera Ekle</Link>\r\n\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","/Users/cenkkaraboa/Desktop/son/web/src/components/common/KameraEkle.js",["72","73","74","75","76","77","78","79","80","81"],"import React, { Component, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { get, post, postImage } from '../requests/Request';\nimport * as toast from '../utilities/Toast';\nimport * as urlConfig from '../requests/urlconfigs';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst KameraEkle = () => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n\n            },\n        },\n        table: {\n            minWidth: 650,\n        },\n\n    }));\n    const classes = useStyles();\n    const [data, setData] = useState({});\n    const [tableData, setTableData] = useState({\n        isLoading: true,\n        data: []\n    });\n    const [optionData, setOptionData] = useState({\n        isLoading: true,\n        data: []\n    });\n\n    const onChange = (event) => {\n        let e = event.target;\n        setData({ ...data, [e.name]: e.value });\n    }\n\n    const onSave = () => {\n        post(urlConfig.SERVICE_URL + \"/api/yonetim/kamera-ekle\", data)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    toast.success(data.message);\n                    KameralariGetir();\n                }\n                else {\n                    toast.error(data.error);\n                }\n            });\n    }\n\n    const KameralariGetir= ()=>{\n        var request = get(urlConfig.SERVICE_URL + \"/api/yonetim/kameralari-getir\");\n        request.then(data => {\n            if (data.success) {\n                const formattedMessages = data.data.map((option) => {\n                    return {\n                        kullaniciAdi: option.kullaniciAdi,\n                        sifre: option.sifre,\n                        ip: option.ip,\n                        isim: option.isim,\n                        protokol: option.protokol,\n                        kameraId:option.kameraId\n                    };\n                });\n                console.log(formattedMessages);\n                setTableData({\n                    isLoading: false,\n                    data: formattedMessages\n                });\n            }\n        });\n    }\n\n    useEffect(() => {\n       KameralariGetir();\n    }, tableData)\n\n\n    return (\n        <div className=\"container content\">\n            <div className=\"card mx-auto \">\n                <div className=\"card-header text-center\">\n                    <h5 className=\"card-title\">\n                        Yeni Kamera Kaydet\n                            </h5>\n                </div>\n                <div className=\"card-body\">\n                    <form className={classes.root} noValidate autoComplete=\"off\">\n                        <TextField onChange={onChange} name=\"isim\" type=\"text\" helperText=\"Kamera Adı\" fullWidth id=\"outlined-basic\" label=\"Kamera Adı\" variant=\"outlined\" />\n                        <TextField onChange={onChange} name=\"kullaniciadi\" fullWidth helperText=\"Kullanıcı adı girin\" id=\"outlined-basic\" label=\"Kullanıcı Adı\" variant=\"outlined\" />\n                        <TextField type=\"password\" onChange={onChange} name=\"sifre\" fullWidth helperText=\"Şifre girin\" id=\"outlined-basic\" label=\"Şifre\" variant=\"outlined\" />\n                        <TextField onChange={onChange} name=\"ipadresi\" type=\"text\" helperText=\"İp adresi girin\" fullWidth id=\"outlined-basic\" label=\"İp Adresi\" variant=\"outlined\" />\n                    </form>\n                </div>\n                <div className=\"card-footer\">\n                    <button onClick={onSave} type=\"button\" className=\"btn btn-primary mx-auto\">Kaydet</button>\n                </div>\n            </div>\n            {tableData.isLoading && <p>Kameralar çekiliyor...</p>}\n            {!tableData.isLoading && (\n                <div className=\"mt-4\">\n                    <TableContainer component={Paper}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>#</TableCell>\n                                    <TableCell align=\"right\">Kamera İsmi</TableCell>\n                                    <TableCell align=\"right\">İp Adresi</TableCell>\n                                    <TableCell align=\"right\">Kullanıcı Adı</TableCell>\n                                    <TableCell align=\"right\">Şifre</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {tableData.data.map((data) => (\n                                    <TableRow key={data.kameraId}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {data.kameraId}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{data.isim}</TableCell>\n                                        <TableCell align=\"right\">{data.ip}</TableCell>\n                                        <TableCell align=\"right\">{data.kullaniciAdi}</TableCell>\n                                        <TableCell align=\"right\">{data.sifre}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            )}\n        </div>\n    )\n\n}\n\n\nexport default KameraEkle;","/Users/cenkkaraboa/Desktop/son/web/src/components/common/Rapor.js",["82","83","84","85"],"import React, { Component, useEffect,useState } from 'react'\nimport * as urlConfig from '../requests/urlconfigs';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { get, post, postImage } from '../requests/Request';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Rapor = () => {\n    const [tableData, setTableData] = useState({\n        isLoading: true,\n        data: []\n    });\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n\n            },\n        },\n    }));\n    const classes = useStyles();\n    const RaporlariGetir = () => {\n        var request = get(urlConfig.SERVICE_URL + \"/api/yonetim/raporlar\");\n        request.then(data => {\n            if (data.success) {\n                const formattedMessages = data.data.map((option) => {\n                    return {\n                        raporId: option.raporId,\n                        mesaj: option.mesaj\n                    };\n                });\n                console.log(formattedMessages);\n                setTableData({\n                    isLoading: false,\n                    data: formattedMessages\n                });\n            }\n        });\n    }\n\n    useEffect(() => {\n        RaporlariGetir();\n    }, tableData)\n\n\n\n    return (\n        <div className=\"container content\">\n            {tableData.isLoading && <p>Raporlar çekiliyor...</p>}\n            {!tableData.isLoading && (\n                <div className=\"mt-4\">\n                    <TableContainer component={Paper}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>#</TableCell>\n                                    <TableCell align=\"right\">Mesaj</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {tableData.data.map((data) => (\n                                    <TableRow key={data.raporId}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {data.raporId}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{data.mesaj}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Rapor;\n","/Users/cenkkaraboa/Desktop/son/web/src/components/common/ZiyaretciKaydet.js",["86","87","88","89","90"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { get, post, postImage } from '../requests/Request';\r\nimport * as toast from '../utilities/Toast';\r\nimport * as urlConfig from '../requests/urlconfigs';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nconst ZiyaretciKaydet = () => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n\r\n            },\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    const [data, setData] = useState({});\r\n    const [optionData, setOptionData] = useState({\r\n        isLoading: true,\r\n        data: []\r\n    });\r\n    const [tableData, setTableData] = useState({\r\n        isLoading: true,\r\n        data: []\r\n    });\r\n    const [img, setImg] = useState(null);\r\n    const [fileName, setFileName] = useState(null);\r\n    const onChange = (event) => {\r\n        let e = event.target;\r\n        setData({ ...data, [e.name]: e.value });\r\n    }\r\n\r\n    const imgOnChange = (e) => {\r\n        setImg(e.target.files[0]);\r\n        setFileName(e.target.files[0].name);\r\n    }\r\n\r\n    const onSave = () => {\r\n        console.log(data);\r\n        if (data) {\r\n            const formData = new FormData();\r\n            formData.append(\"file\", img);\r\n            formData.append(\"fileName\", fileName);\r\n            formData.append(\"name\", data.name);\r\n            formData.append(\"surname\", data.surname);\r\n            formData.append(\"phoneNumber\", data.phoneNumber);\r\n            formData.append(\"employeeId\", data.employeeId);\r\n            formData.append(\"address\", data.address);\r\n            const res = postImage(urlConfig.SERVICE_URL + '/api/yonetim/ziyaretciekle', formData);\r\n            res.then((response) => {\r\n                if (response.data.success) {\r\n                    toast.success(response.data.message)\r\n                    ZiyaretcileriGetir();\r\n                }\r\n                else {\r\n                    toast.error(response.data.message);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const getOptionData = () => {\r\n        var serverResult = get(urlConfig.SERVICE_URL + '/api/yonetim/getallemployeeoptions');\r\n        serverResult.then(data => {\r\n\r\n            if (data.success) {\r\n                setOptionData({\r\n                    isLoading: false,\r\n                    data: data.data\r\n                });\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    const ZiyaretcileriGetir=()=>{\r\n        var request = get(urlConfig.SERVICE_URL + \"/api/yonetim/ziyaretcileri-getir\");\r\n        request.then(data => {\r\n            if (data.success) {\r\n                const formattedMessages = data.data.map((option) => {\r\n                    return {\r\n                        ziyaretciId: option.ziyaretciId,\r\n                        adsoyad: option.adsoyad,\r\n                        telefon: option.telefon,\r\n                        calisanIsmi: option.calisanIsmi,\r\n                        resimUrl: option.resimUrl,\r\n                        kameraId:option.kameraId\r\n                    };\r\n                });\r\n                console.log(formattedMessages);\r\n                setTableData({\r\n                    isLoading: false,\r\n                    data: formattedMessages\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (optionData.isLoading) {\r\n            getOptionData();\r\n        }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        ZiyaretcileriGetir();\r\n    },tableData)\r\n\r\n\r\n    return (\r\n        <div className=\"container content\">\r\n            <div className=\"card mx-auto \">\r\n                <div className=\"card-header text-center\">\r\n                    <h5 className=\"card-title\">\r\n                        Yeni Ziyaretçi Kaydet\r\n                            </h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {optionData.isLoading && <p>Fetching options...</p>}\r\n                    {!optionData.isLoading && (\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <TextField onChange={onChange} name=\"name\" fullWidth helperText=\"Ad girin\" id=\"outlined-basic\" label=\"Ad\" variant=\"outlined\" />\r\n                            <TextField onChange={onChange} name=\"surname\" fullWidth helperText=\"Soyad girin\" id=\"outlined-basic\" label=\"Soyad\" variant=\"outlined\" />\r\n                            <TextField onChange={onChange} name=\"phoneNumber\" type=\"number\" helperText=\"Telefon numarası girin\" fullWidth id=\"outlined-basic\" label=\"Telefon Numarası\" variant=\"outlined\" />\r\n                            <FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Gidilecek Çalışanı Seçin</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"demo-simple-select-outlined\"\r\n                                    label=\"Age\"\r\n                                    name=\"employeeId\"\r\n                                    onChange={onChange}\r\n                                >\r\n                                    {optionData.data.map((option) => (\r\n                                        <MenuItem key={option.key} value={option.key}>{option.value}</MenuItem>\r\n                                    ))}\r\n\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl fullWidth>\r\n                                <label>Fotograf</label>\r\n                                <input onChange={imgOnChange} name=\"file\" type=\"file\" accept=\"image/*\" className=\"form-control\"></input>\r\n                            </FormControl>\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\"\r\n                                label=\"Adres\"\r\n                                multiline\r\n                                rows={4}\r\n                                defaultValue=\"Adres\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                name=\"address\"\r\n                                onChange={onChange}\r\n                            />\r\n\r\n                        </form>\r\n                    )}\r\n\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <button onClick={onSave} type=\"button\" className=\"btn btn-primary mx-auto\">Kaydet</button>\r\n                </div>\r\n            </div>\r\n            {tableData.isLoading && <p>Ziyaretçiler çekiliyor...</p>}\r\n            {!tableData.isLoading && (\r\n                <div className=\"mt-4\">\r\n                    <TableContainer component={Paper}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell>#</TableCell>\r\n                                    <TableCell align=\"right\">Ad Soyad</TableCell>\r\n                                    <TableCell align=\"right\">Telefon Numarası</TableCell>\r\n                                    <TableCell align=\"right\">Gideceği Çalışan</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {tableData.data.map((data) => (\r\n                                    <TableRow key={data.ziyaretciId}>\r\n                                        <TableCell>\r\n                                            <img className=\"fluid\" width=\"60px\" height=\"60px\" src={urlConfig.SERVICE_URL+data.resimUrl}></img>\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {data.ziyaretciId}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{data.adsoyad}</TableCell>\r\n                                        <TableCell align=\"right\">{data.telefon}</TableCell>\r\n                                        <TableCell align=\"right\">{data.calisanIsmi}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ZiyaretciKaydet;","/Users/cenkkaraboa/Desktop/son/web/src/components/common/Kamera1.js",["91","92","93","94","95"],"import React, { Component, useEffect, useState } from 'react';\r\nimport Kamera1Img from '../../img/1.jpg';\r\nimport { get, post, postImage } from '../requests/Request';\r\nimport * as urlConfig from '../requests/urlconfigs';\r\nconst Kamera1 = () => {\r\n    const [guncelKamera, setGuncelKamera] = useState({\r\n        isLoading: true,\r\n        data: {\"kameraId\":null}\r\n    });\r\n\r\n    useEffect(() => {\r\n        KameraGuncelle();\r\n    })\r\n\r\n    const KameraGuncelle = () => {\r\n        let search = window.location.search;\r\n        let params = new URLSearchParams(search);\r\n        let kameraId = params.get('kameraId');\r\n        guncelKamera.isLoading = false;\r\n        guncelKamera.data.kameraId = kameraId;\r\n        if (kameraId) {\r\n            post(urlConfig.SERVICE_URL + \"/api/yonetim/kameraguncelle\", guncelKamera.data)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n\r\n                    }\r\n                    else {\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container content\">\r\n            <img src={Kamera1Img} className=\"img-fluid\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Kamera1;\r\n","/Users/cenkkaraboa/Desktop/son/web/src/components/requests/urlconfigs.js",[],"/Users/cenkkaraboa/Desktop/son/web/src/components/requests/Request.js",[],"/Users/cenkkaraboa/Desktop/son/web/src/components/utilities/Toast.js",["96"],"import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\n\nexport function success(message){\n    return toast.success(message);\n}\n\nexport function warning(message){\n    return toast.warning(message);\n} \n\nexport function error(message){\n    return toast.error(message);\n}\n\nexport function info(message){\n    return toast.info(message);\n}",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":17,"nodeType":"103","messageId":"104","endLine":2,"endColumn":23},{"ruleId":"101","severity":1,"message":"105","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"106","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":22},{"ruleId":"101","severity":1,"message":"107","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":13},{"ruleId":"101","severity":1,"message":"108","line":10,"column":21,"nodeType":"103","messageId":"104","endLine":10,"endColumn":30},{"ruleId":"109","severity":1,"message":"110","line":88,"column":7,"nodeType":"103","endLine":88,"endColumn":16},{"ruleId":"101","severity":1,"message":"105","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"111","line":3,"column":15,"nodeType":"103","messageId":"104","endLine":3,"endColumn":19},{"ruleId":"101","severity":1,"message":"108","line":3,"column":21,"nodeType":"103","messageId":"104","endLine":3,"endColumn":30},{"ruleId":"109","severity":1,"message":"110","line":32,"column":8,"nodeType":"103","endLine":32,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":37,"column":17,"nodeType":"114","endLine":37,"endColumn":54},{"ruleId":"101","severity":1,"message":"105","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"106","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":22},{"ruleId":"101","severity":1,"message":"115","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":19},{"ruleId":"101","severity":1,"message":"116","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":14},{"ruleId":"101","severity":1,"message":"117","line":7,"column":8,"nodeType":"103","messageId":"104","endLine":7,"endColumn":16},{"ruleId":"101","severity":1,"message":"118","line":8,"column":8,"nodeType":"103","messageId":"104","endLine":8,"endColumn":18},{"ruleId":"101","severity":1,"message":"108","line":9,"column":21,"nodeType":"103","messageId":"104","endLine":9,"endColumn":30},{"ruleId":"101","severity":1,"message":"119","line":39,"column":12,"nodeType":"103","messageId":"104","endLine":39,"endColumn":22},{"ruleId":"101","severity":1,"message":"120","line":39,"column":24,"nodeType":"103","messageId":"104","endLine":39,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":88,"column":8,"nodeType":"103","endLine":88,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"111","line":10,"column":15,"nodeType":"103","messageId":"104","endLine":10,"endColumn":19},{"ruleId":"101","severity":1,"message":"108","line":10,"column":21,"nodeType":"103","messageId":"104","endLine":10,"endColumn":30},{"ruleId":"109","severity":1,"message":"110","line":48,"column":8,"nodeType":"103","endLine":48,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"106","line":4,"column":8,"nodeType":"103","messageId":"104","endLine":4,"endColumn":22},{"ruleId":"101","severity":1,"message":"111","line":9,"column":15,"nodeType":"103","messageId":"104","endLine":9,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":119,"column":7,"nodeType":"103","endLine":119,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":194,"column":45,"nodeType":"114","endLine":194,"endColumn":137},{"ruleId":"101","severity":1,"message":"105","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"123","line":3,"column":10,"nodeType":"103","messageId":"104","endLine":3,"endColumn":13},{"ruleId":"101","severity":1,"message":"108","line":3,"column":21,"nodeType":"103","messageId":"104","endLine":3,"endColumn":30},{"ruleId":"101","severity":1,"message":"124","line":6,"column":26,"nodeType":"103","messageId":"104","endLine":6,"endColumn":41},{"ruleId":"121","severity":1,"message":"122","line":36,"column":13,"nodeType":"114","endLine":36,"endColumn":57},{"ruleId":"101","severity":1,"message":"125","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":24},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'FormHelperText' is defined but never used.","'Input' is defined but never used.","'postImage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","'post' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'InputLabel' is defined but never used.","'optionData' is assigned a value but never used.","'setOptionData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'get' is defined but never used.","'setGuncelKamera' is assigned a value but never used.","'ToastContainer' is defined but never used.","no-global-assign","no-unsafe-negation"]